<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bitfty.mall.dao.OrderDao">

    <resultMap id="resultMap" type="com.bitfty.mall.entity.Order">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="BIGINT" />
        <result column="amount" property="amount" jdbcType="DECIMAL" />
        <result column="exchange_rate" property="exchangeRate" jdbcType="VARCHAR" />
        <result column="currency_type" property="currencyType" jdbcType="VARCHAR" />
        <result column="discount_amount" property="discountAmount" jdbcType="DECIMAL" />
        <result column="coupon_amount" property="couponAmount" jdbcType="DECIMAL" />
        <result column="service_fee" property="serviceFee" jdbcType="DECIMAL" />
        <result column="prod_amount" property="prodAmount" jdbcType="DECIMAL" />
        <result column="electric_fee" property="electricFee" jdbcType="DECIMAL" />
        <result column="memo" property="memo" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
        <result column="update_at" property="updateAt" jdbcType="TIMESTAMP" />
    </resultMap>

    <resultMap id="orderListMap" type="com.bitfty.mall.dto.OrderListDto">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="prod_id" property="prodId" jdbcType="VARCHAR" />
        <result column="prod_type" property="prodType" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <result column="currency_type" property="currencyType" jdbcType="VARCHAR" />
        <result column="order_currency_type" property="orderCurrencyType" jdbcType="VARCHAR" />
        <result column="days" property="days" jdbcType="INTEGER" />
        <result column="power_size" property="powerSize" jdbcType="DECIMAL" />
        <result column="buy_count" property="buyCount" jdbcType="INTEGER" />
        <result column="discount_amount" property="discountAmount" jdbcType="DECIMAL" />
        <result column="amount" property="amount" jdbcType="DECIMAL" />
        <result column="prod_amount" property="prodAmount" jdbcType="DECIMAL" />
        <result column="electric_fee" property="electricFee" jdbcType="DECIMAL" />
        <result column="exchange_rate" property="exchangeRate" jdbcType="VARCHAR" />
        <result column="expire_date" property="expireDate" jdbcType="TIMESTAMP" />
        <result column="gain_date" property="gainDate" jdbcType="TIMESTAMP" />
        <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
        <result column="pay_type" property="payType" jdbcType="VARCHAR" />
        <result column="picture_url" property="pictureUrl" jdbcType="VARCHAR" />
        <result column="memo" property="memo" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Base_Column_List">
        id, user_id, amount, exchange_rate,currency_type, discount_amount, coupon_amount, prod_amount, electric_fee, service_fee, memo, status, create_at, update_at
    </sql>

    <insert id="insert" parameterType="com.bitfty.mall.entity.Order" >
        INSERT INTO tbl_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="userId != null">user_id,</if>
            <if test="amount != null">amount,</if>
            <if test="exchangeRate != null">exchange_rate,</if>
            <if test="currencyType != null">currency_type,</if>
            <if test="discountAmount != null">discount_amount,</if>
            <if test="couponAmount != null">coupon_amount,</if>
            <if test="serviceFee != null">service_fee,</if>
            <if test="prodAmount != null">prod_amount,</if>
            <if test="electricFee != null">electric_fee,</if>
            <if test="memo != null">memo,</if>
            <if test="status != null">status,</if>
            <if test="createAt != null">create_at,</if>
            <if test="updateAt != null">update_at,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id,jdbcType=VARCHAR},</if>
            <if test="userId != null">#{userId,jdbcType=BIGINT},</if>
            <if test="amount != null">#{amount,jdbcType=DECIMAL},</if>
            <if test="exchangeRate != null">#{exchangeRate,jdbcType=VARCHAR},</if>
            <if test="currencyType != null">#{currencyType,jdbcType=VARCHAR},</if>
            <if test="discountAmount != null">#{discountAmount,jdbcType=DECIMAL},</if>
            <if test="couponAmount != null">#{couponAmount,jdbcType=DECIMAL},</if>
            <if test="serviceFee != null">#{serviceFee,jdbcType=DECIMAL},</if>
            <if test="prodAmount != null">#{prodAmount,jdbcType=DECIMAL},</if>
            <if test="electricFee != null">#{electricFee,jdbcType=DECIMAL},</if>
            <if test="memo != null">#{memo,jdbcType=VARCHAR},</if>
            <if test="status != null">#{status,jdbcType=INTEGER},</if>
            <if test="createAt != null">#{createAt,jdbcType=TIMESTAMP},</if>
            <if test="updateAt != null">#{updateAt,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>

    <select id="findPageByParams" parameterType="map" resultMap="orderListMap">
        select
            tor.id, tor.status, tor.discount_amount, tor.amount,
            tor.prod_amount, tor.electric_fee, tor.exchange_rate, tor.create_at,
            tbs.currency_type,tor.currency_type as order_currency_type,
            tbs.prod_id, tbs.name, tbs.power_size,
            tbs.buy_count, tbs.expire_date, tbs.gain_date, tbs.memo,
            tbs.prod_type,tbs.picture_url,tbs.days
        from tbl_order tor left join tbl_buy_snapshot tbs on tor.id = tbs.order_id
        where tor.user_id = #{uid}
        <if test="status != null">
            and tor.status = #{status}
        </if>
        order by tor.create_at desc limit #{start},#{ends}
    </select>

    <select id="countByParams" parameterType="map" resultType="integer">
        select
        count(1)
        from tbl_order tor left join tbl_buy_snapshot tbs on tor.id = tbs.order_id
        where  tor.user_id = #{uid}
        <if test="status != null">
            and tor.status = #{status}
        </if>
    </select>

    <select id="countByStatus" parameterType="map" resultType="integer">
        select
        count(1)
        from tbl_order tor left join tbl_buy_snapshot tbs on tor.id = tbs.order_id
        where   tor.status = #{status}
    </select>

    <update id="update">
        update tbl_order
        <set>
            <if test="exchangeRate != null">
                exchange_rate = #{exchangeRate,jdbcType=VARCHAR},
            </if>
            <if test="amount != null">
              amount = #{amount,jdbcType=DECIMAL}
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <select id="findByIdStatus" resultMap="resultMap">
        select <include refid="Base_Column_List" /> from tbl_order
        where id = #{orderId,jdbcType=VARCHAR} and status =#{status,jdbcType=INTEGER} and user_id = #{uid} limit 0,1
    </select>

    <update id="cancel" parameterType="string">
        update tbl_order
        set status = 4
        where id = #{id} and user_id = #{uid}
    </update>

    <select id="queryByUid" parameterType="java.lang.Long" resultMap="resultMap">
        select
        <include refid="Base_Column_List"/>
        from tbl_order where user_id = #{uid} and status = 1
    </select>

    <select id="queryById" parameterType="string" resultMap="resultMap">
        select
        <include refid="Base_Column_List"/>
        from tbl_order where id = #{id,jdbcType=VARCHAR}
    </select>

    <select id="queryByIdAndUid" resultMap="resultMap">
        select
        <include refid="Base_Column_List"/>
        from tbl_order where id = #{id,jdbcType=VARCHAR} and user_id = #{uid,jdbcType=BIGINT}
    </select>

    <select id="queryOrderIds" resultType="map">
        select
            id,
            user_id
        from tbl_order
        where status = 1
          and create_at <![CDATA[ < ]]> DATE_ADD(NOW(), INTERVAL - 2 HOUR )
    </select>

    <select id="findInHandleOrderByIds" resultType="java.lang.String">
        SELECT id from tbl_order o
        where o.status in(0, 1, 2)
            and o.id in
            <foreach collection="list" open="(" separator="," close=")" item="oid">
                #{oid}
            </foreach>
    </select>

    <select id="findOrderByIds" resultMap="resultMap">
        SELECT <include refid="Base_Column_List"/>
        from tbl_order o
        where o.id in
        <foreach collection="list" open="(" separator="," close=")" item="oid">
            #{oid}
        </foreach>
    </select>

    <update id="updateOrderStatus">
        update tbl_order
        set status = #{status,jdbcType=INTEGER}
        where id = #{orderId,jdbcType=VARCHAR} and user_id = #{uid,jdbcType=BIGINT}
    </update>

    <select id="queryAmount" resultType="decimal">
        select amount from tbl_order where id = #{id} and user_id = #{uid}
    </select>

    <select id="findByStatus" resultType="String">
        SELECT  tor.id
        FROM tbl_order tor
        WHERE tor.STATUS = #{status} and tor.update_at <![CDATA[ < ]]> DATE_ADD(NOW(), INTERVAL - 5 MINUTE)
    </select>

    <select id="findIdByStatusAndTime" resultType="String">
        SELECT  tor.id
        FROM tbl_order tor
        WHERE tor.STATUS = #{status} and tor.create_at >= #{startTime}
    </select>

    <update id="finishOrderStatus">
        update tbl_order
        set status = 3,
            currency_type = #{currencyType}
        where id = #{orderId}  and status = 1
    </update>

    <select id="findPageBackstageByParams" parameterType="map" resultMap="resultMap" >
        select <include refid="Base_Column_List"/>
        from tbl_order
        <where>
            <if test="id != null and id != ''">
                and id = #{id}
            </if>
            <if test="uid != null and uid != ''">
                and user_id = #{uid}
            </if>
            <if test="status != null and status != ''">
                and status = #{status}
            </if>
            <if test="startTime != null and startTime != ''">
                and create_at >= #{startTime}
            </if>
            <if test="endTime != null and endTime != ''">
                and create_at <![CDATA[ <= ]]> #{endTime}
            </if>
        </where>
        order by create_at desc
        limit #{start},#{ends}
    </select>

    <select id="countPageBackstageByParams" parameterType="map" resultType="integer" >
        select count(1)
        from tbl_order
        <where>
            <if test="id != null and id != ''">
                and id = #{id}
            </if>
            <if test="uid != null and uid != ''">
                and user_id = #{uid}
            </if>
            <if test="status != null and status != ''">
                and status = #{status}
            </if>
            <if test="startTime != null and startTime != ''">
                and create_at >= #{startTime}
            </if>
            <if test="endTime != null and endTime != ''">
                and create_at <![CDATA[ <= ]]> #{endTime}
            </if>
        </where>
    </select>
</mapper>